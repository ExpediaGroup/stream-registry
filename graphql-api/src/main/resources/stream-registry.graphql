scalar Tags
scalar Config

type Domain {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
}

type Schema {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
  domain: Domain!
}

type Stream {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
  domain: Domain!
  version: Int!
  schema: Schema!
}

type Zone {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
}

type Infrastructure {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
  zone: Zone!
}

type Producer {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
  stream: Stream!
  zones: [String!]!
}

type Consumer {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
  stream: Stream!
  zones: [String!]!
}

type StreamBinding {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
  stream: Stream!
  infrastructure: Infrastructure!
}

type ProducerBinding {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
  producer: Producer!
  binding: StreamBinding!
}

type ConsumerBinding {
  name: String!
  owner: String!
  description: String!
  tags: Tags!
  type: String!
  configuration: Config!
  consumer: Consumer!
  binding: StreamBinding!
}

input SchemaKeyQueryInput {
  name: String
  domain: String
}

input SchemaKeyInput {
  name: String!
  domain: String!
}

input StreamKeyQueryInput {
  domain: String
  name: String
  version: Int
}

input StreamKeyInput {
  domain: String!
  name: String!
  version: Int!
}

input InfrastructureKeyQueryInput {
  name: String
  zone: String
}

input InfrastructureKeyInput {
  name: String!
  zone: String!
}

type Query {
  domains(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
  ): [Domain!]!
  schemas(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
    domain: String
  ): [Schema!]!
  streams(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
    domain: String
    version: Int
    schema: SchemaKeyQueryInput
  ): [Stream!]!
  zones(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
  ): [Zone!]!
  infrastructures(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
    zone: String
  ): [Infrastructure!]!
  producers(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
    stream: StreamKeyQueryInput
    zones: [String!]
  ): [Producer!]!
  consumers(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
    stream: StreamKeyQueryInput
    zones: [String!]
  ): [Consumer!]!
  streamBindings(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
    stream: StreamKeyQueryInput
    infrastructure: InfrastructureKeyQueryInput
  ): [StreamBinding!]!
  producerBindings(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
    producer: String
    zones: [String!]
  ): [ProducerBinding!]!
  consumerBindings(
    name: String
    owner: String
    description: String
    tags: Tags
    type: String
    configuration: Config
    consumer: String
    zones: [String!]
  ): [ConsumerBinding!]!
}

type Mutation {
  upsertDomain(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
  ): Boolean!
  upsertSchema(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
    domain: String!
  ): Boolean!
  upsertStream(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
    domain: String!
    version: Int!
    schema: SchemaKeyInput!
  ): Boolean!
  upsertZone(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
  ): Boolean!
  upsertInfrastructure(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
    zone: String!
  ): Boolean!
  upsertProducer(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
    stream: StreamKeyInput!
    zones: [String!]!
  ): Boolean!
  upsertConsumer(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
    stream: StreamKeyInput!
    zones: [String!]!
  ): Boolean!
  upsertStreamBinding(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
    stream: StreamKeyInput!
    infrastructure: InfrastructureKeyInput!
  ): Boolean!
  upsertProducerBinding(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
    producer: String!
    zones: [String!]!
  ): Boolean!
  upsertConsumerBinding(
    name: String!
    description: String!
    tags: Tags!
    type: String!
    configuration: Config!
    consumer: String!
    zones: [String!]!
  ): Boolean!
}
