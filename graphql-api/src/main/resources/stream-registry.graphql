type KeyValue {
  key: String!
  value: String!
}

type Domain {
  name: String!
  owner: String!
  description: String!
  tags: [KeyValue!]!
  type: String!
  configuration: [KeyValue!]!
}

type Schema {
  name: String!
  owner: String!
  description: String!
  tags: [KeyValue!]!
  type: String!
  configuration: [KeyValue!]!
  domain: Domain!
}

type Stream {
  name: String!
  owner: String!
  description: String!
  tags: [KeyValue!]!
  type: String!
  configuration: [KeyValue!]!
  domain: Domain!
  version: Int!
  schema: Schema!
}

input KeyValueQueryInput {
  key: String
  value: String
}

input KeyValueInput {
  key: String!
  value: String!
}

input SchemaKeyQueryInput {
  name: String
  domain: String
}

input SchemaKeyInput {
  name: String!
  domain: String!
}

type Query {
  domains(
    name: String
    owner: String
    description: String
    tags: [KeyValueQueryInput!]
    type: String
    configuration: [KeyValueQueryInput!]
  ): [Domain!]!
  schemas(
    name: String
    owner: String
    description: String
    tags: [KeyValueQueryInput!]
    type: String
    configuration: [KeyValueQueryInput!]
    domain: String
  ): [Schema!]!
  streams(
    name: String
    owner: String
    description: String
    tags: [KeyValueQueryInput!]
    type: String
    configuration: [KeyValueQueryInput!]
    domain: String
    version: Int
    schema: SchemaKeyQueryInput
  ): [Stream!]!
}

type Mutation {
  upsertDomain(
    name: String!
    description: String!
    tags: [KeyValueInput!]!
    type: String!
    configuration: [KeyValueInput!]!
  ): Boolean!
  upsertSchema(
    name: String!
    description: String!
    tags: [KeyValueInput!]!
    type: String!
    configuration: [KeyValueInput!]!
    domain: String!
  ): Boolean!
  upsertStream(
    name: String!
    description: String!
    tags: [KeyValueInput!]!
    type: String!
    configuration: [KeyValueInput!]!
    domain: String!
    version: Int!
    schema: SchemaKeyInput!
  ): Boolean!
}
