<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.homeaway.streamplatform</groupId>
    <artifactId>stream-registry-parent</artifactId>
    <name>${project.groupId}:${project.artifactId}</name>
    <modules>
        <module>schema-library-events</module>
        <module>infra-provider</module>
        <module>infra-provider-kafka</module>
        <module>core</module>
        <module>assembly</module>
    </modules>

    <description>Stream Registry Parent POM</description>
    <url>https://homeaway.github.io/stream-registry/</url>

    <packaging>pom</packaging>
    <version>0.4.6-SNAPSHOT</version>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/HomeAway/stream-registry/tree/master</url>
        <connection>scm:git:ssh://git@github.com/HomeAway/stream-registry.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/HomeAway/stream-registry.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>Stream Registry Committers</name>
            <email>stream-registry-committers@groups.homeawaycorp.com</email>
            <organization>HomeAway</organization>
            <organizationUrl>https://www.homeaway.com</organizationUrl>
        </developer>
    </developers>

    <properties>

        <!--Java-->
        <java.version>11</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <asm.version>7.0</asm.version>

        <!--Encoding-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <mainClass>com.homeaway.streamplatform.streamregistry.StreamRegistryApplication</mainClass>
        <dropwizard.server.config>config-dev.yaml</dropwizard.server.config>

        <!-- JaCoCo Coverage -->
        <coverage.line>0.59</coverage.line>

        <!-- Logging -->
        <slf4j.version>1.7.25</slf4j.version>

        <!-- Testing -->
        <junit.version>4.12</junit.version>
        <hamcrest.version>1.3</hamcrest.version>
        <mockito.version>2.23.4</mockito.version>
        <powermock.version>2.0.0</powermock.version>
        <curator-test.version>2.9.0</curator-test.version>

        <!-- Utilities -->
        <lombok.version>1.18.4</lombok.version>
        <guava.version>23.4-jre</guava.version>
        <commons-lang3.version>3.8.1</commons-lang3.version>

        <javax.validation.version>1.1.0.Final</javax.validation.version>

        <wagon-provider-api.version>1.0-beta-2</wagon-provider-api.version>
        <plexus-utils.version>1.5.6</plexus-utils.version>
        <plexus-container-default.version>1.0-alpha-9-stable-1</plexus-container-default.version>

        <!-- Servlets -->
        <javax.ws.rs-api.version>2.1</javax.ws.rs-api.version>
        <jetty.version>9.4.11.v20180605</jetty.version>

        <!-- DropWizard -->
        <dropwizard.version>1.3.8</dropwizard.version>

        <!-- Jackson -->
        <jackson.version>2.9.2</jackson.version>

        <!-- Swagger -->
        <dropwizard-swagger.version>1.1.2-1</dropwizard-swagger.version>
        <swagger.version>1.5.21</swagger.version>

        <!-- Kafka + Confluent versions-->
        <scala.version>2.11</scala.version>
        <scala-library.version>${scala.version}.11</scala-library.version>
        <kafka.confluent.version>0.11.0.1-cp1</kafka.confluent.version>
        <zookeeper.version>3.4.10</zookeeper.version>
        <rocksdb.version>5.0.1</rocksdb.version>
        <confluent.version>3.3.1</confluent.version>
        <avro.version>1.8.2</avro.version>
        <snappy-java.version>1.1.2.6</snappy-java.version>

        <!-- Plugins -->
        <assembly.pluginVersion>3.1.0</assembly.pluginVersion>
        <javadoc.pluginVersion>3.0.1</javadoc.pluginVersion>
        <enforcer.pluginVersion>3.0.0-M2</enforcer.pluginVersion>
        <checkstyle.pluginVersion>3.0.0</checkstyle.pluginVersion>
        <source.pluginVersion>2.4</source.pluginVersion>
        <shade.pluginVersion>3.1.0</shade.pluginVersion>
        <spotless.pluginVersion>1.15.0</spotless.pluginVersion>
        <dependency.pluginVersion>3.1.1</dependency.pluginVersion>
        <deploy.pluginVersion>3.0.0-M1</deploy.pluginVersion>
        <release.pluginVersion>2.5.3</release.pluginVersion>
        <mavenCompiler.pluginVersion>3.8.0</mavenCompiler.pluginVersion>
        <surefire.pluginVersion>3.0.0-M2</surefire.pluginVersion>
        <build-helper.maven.plugin.version>3.0.0</build-helper.maven.plugin.version>
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>

        <!-- OSSRH -->
        <nexusStaging.pluginVersion>1.6.7</nexusStaging.pluginVersion>

        <!-- Jib -->
        <jib-maven-plugin.version>0.10.1</jib-maven-plugin.version>
        <jib.container.appRoot>/app</jib.container.appRoot>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- surefire-booter -->
            <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-booter</artifactId>
                <version>${surefire.pluginVersion}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- Utilities -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation.version}</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-utils</artifactId>
                <version>${plexus-utils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-container-default</artifactId>
                <version>${plexus-container-default.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-provider-api</artifactId>
                <version>${wagon-provider-api.version}</version>
            </dependency>

            <!-- DropWizard -->
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-bom</artifactId>
                <version>${dropwizard.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish.hk2.external</groupId>
                        <artifactId>aopalliance-repackaged</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.javassist</groupId>
                        <artifactId>javassist</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-security</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${javax.ws.rs-api.version}</version>
            </dependency>

            <!-- Jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Kafka -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala-library.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>common-config</artifactId>
                <version>${confluent.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>common-utils</artifactId>
                <version>${confluent.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.version}</artifactId>
                <version>${kafka.confluent.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.confluent.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.confluent.version}</version>
            </dependency>
            <dependency>
                <groupId>org.rocksdb</groupId>
                <artifactId>rocksdbjni</artifactId>
                <version>${rocksdb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>0.10</version>
            </dependency>
            <!-- Dependencies below are required only when using Apache Avro. -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${confluent.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-streams-avro-serde</artifactId>
                <version>${confluent.version}</version>
            </dependency>
            <dependency> <!-- Included for testing -->
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry</artifactId>
                <version>${confluent.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-client</artifactId>
                <version>${confluent.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Swagger -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-jersey2-jaxrs</artifactId>
                <version>${swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.javassist</groupId>
                        <artifactId>javassist</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.smoketurner</groupId>
                <artifactId>dropwizard-swagger</artifactId>
                <version>${dropwizard-swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-jersey2-jaxrs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- JDK 11 changes -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.4.0-b180830.0359</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.24.1-GA</version>
            </dependency>

            <!-- Test Dependencies -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Test : Kafka -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-test</artifactId>
                <version>${curator-test.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.javassist</groupId>
                        <artifactId>javassist</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.confluent.version}</version>
                <scope>test</scope>
                <classifier>test</classifier>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.confluent.version}</version>
                <classifier>test</classifier>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-core</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy-agent</artifactId>
                <version>1.8.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>1.8.5</version>
                <scope>test</scope>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.pluginVersion}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.ow2.asm</groupId>
                            <artifactId>asm</artifactId>
                            <version>${asm.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${assembly.pluginVersion}</version>
                    <configuration>
                        <tarLongFileMode>posix</tarLongFileMode>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${enforcer.pluginVersion}</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <dependencyConvergence />
                                    <requireMavenVersion>
                                        <version>3.0</version>
                                    </requireMavenVersion>
                                    <bannedDependencies>
                                        <searchTransitive>true</searchTransitive>
                                        <excludes>
                                            <!-- This should not exist as it will force SLF4J calls to be delegated to log4j -->
                                            <exclude>org.slf4j:slf4j-log4j12</exclude>
                                            <exclude>org.slf4j:slf4j-log4j13</exclude>
                                            <!-- This should not exist as it will force SLF4J calls to be delegated to jul & jcl -->
                                            <exclude>org.slf4j:slf4j-jdk14</exclude>
                                            <exclude>org.slf4j:slf4j-jcl</exclude>
                                            <!-- Ensure only the slf4j binding for logback is on the classpath -->
                                            <exclude>log4j:log4j</exclude>
                                            <!-- As recommended from the slf4j guide, exclude commons-logging -->
                                            <exclude>commons-logging:*</exclude>
                                        </excludes>
                                        <message>Secondary logging frameworks are
                                            banned in preference to org.slf4j:*-over-slf4j</message>
                                    </bannedDependencies>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${shade.pluginVersion}</version>
                    <configuration>
                        <createDependencyReducedPom>true</createDependencyReducedPom>
                        <createSourcesJar>true</createSourcesJar>
                        <transformers>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                <mainClass>${mainClass}</mainClass>
                            </transformer>
                        </transformers>
                        <!-- exclude signed Manifests -->
                        <filters>
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>META-INF/*.SF</exclude>
                                    <exclude>META-INF/*.DSA</exclude>
                                    <exclude>META-INF/*.RSA</exclude>
                                </excludes>
                            </filter>
                        </filters>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${source.pluginVersion}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadoc.pluginVersion}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- when this becomes source jdk11+ change/remove this -->
                        <source>8</source>
                        <failOnError>false</failOnError>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.ow2.asm</groupId>
                            <artifactId>asm</artifactId>
                            <version>${asm.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${release.pluginVersion}</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <useReleaseProfile>false</useReleaseProfile>
                        <releaseProfiles>signed</releaseProfiles>
                        <!-- to ensure we only deploy during release:perform -->
                        <goals>deploy</goals>
                        <!-- to ensure that tags are of the right format -->
                        <tagNameFormat>v@{project.version}</tagNameFormat>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${deploy.pluginVersion}</version>
                    <!-- We disable this in favor of nexus-staging-maven-plugin -->
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${dependency.pluginVersion}</version>
                    <executions>
                        <execution>
                            <id>analyze</id>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <failOnWarning>true</failOnWarning>
                                <ignoredDependencies>
                                    <ignoredDependency>org.eclipse.jetty:jetty-server:jar:9.*</ignoredDependency>
                                </ignoredDependencies>
                                <ignoredUnusedDeclaredDependencies>
                                    <ignoredUnusedDeclaredDependency>com.google.guava:guava:jar:${guava.version}</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>io.dropwizard:dropwizard-util:jar:*</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>io.swagger:swagger-jersey2-jaxrs:jar:${swagger.version}</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.apache.avro:avro:jar:${avro.version}</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.apache.kafka:kafka-clients:jar:*</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.apache.kafka:kafka_${scala.version}:jar:${kafka.confluent.version}</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.hamcrest:hamcrest-core:jar:${hamcrest.version}</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.slf4j:slf4j-api:jar:${slf4j.version}</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>io.dropwizard:dropwizard-testing:jar:${dropwizard.version}</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>net.bytebuddy:byte-buddy:jar</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>net.bytebuddy:byte-buddy-agent</ignoredUnusedDeclaredDependency>
                                    <!-- JDK 11 changes -->
                                    <ignoredUnusedDeclaredDependency>javax.xml.bind:jaxb-api:jar:2.4.0-b180830.0359</ignoredUnusedDeclaredDependency>
                                </ignoredUnusedDeclaredDependencies>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.ow2.asm</groupId>
                            <artifactId>asm</artifactId>
                            <version>${asm.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless.pluginVersion}</version>
                    <configuration>
                        <java>
                            <licenseHeader>
                                <file>${project.basedir}/../LICENSE.txt</file>
                            </licenseHeader>
                            <removeUnusedImports />
                            <importOrder>
                                <order>java,javax,com,io,org,com.homeaway,</order>
                            </importOrder>
                        </java>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>apply</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro-maven-plugin</artifactId>
                    <version>${avro.version}</version>
                    <configuration>
                        <stringType>String</stringType>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>generate-resources</phase>
                            <!--The source directory by default is src/main/avro. No need to specify-->
                            <goals>
                                <!--These goals are needed to produce Avro generated classes from .idl files-->
                                <goal>protocol</goal>
                                <goal>idl-protocol</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${mavenCompiler.pluginVersion}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.ow2.asm</groupId>
                            <artifactId>asm</artifactId>
                            <version>${asm.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                    <configuration>
                        <mainClass>${mainClass}</mainClass>
                        <includePluginDependencies>true</includePluginDependencies>
                        <arguments>
                            <!-- Standard Dropwizard app arguments -->
                            <argument>server</argument>
                            <argument>${project.basedir}/${dropwizard.server.config}</argument>
                        </arguments>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>stream-registry-core</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>infra-provider-kafka</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                        <!-- Added to fix Jersey ClassNotFoundException on exec:java goal -->
                        <dependency>
                            <groupId>org.glassfish.jersey.containers</groupId>
                            <artifactId>jersey-container-servlet-core</artifactId>
                            <version>2.25.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>${project.basedir}</directory>
                <includes>
                    <include>config-dev.yaml</include>
                </includes>
            </testResource>
        </testResources>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${javadoc.pluginVersion}</version>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <repository>
            <id>confluent</id>
            <url>http://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <!-- We create a profile here for two things: -->
            <!-- 1. centrally specify the deploy to ossrh -->
            <!-- 2. Sign all relevant artifacts (via configured GPG keys) -->
            <!-- TODO: Automate Release Process #106 -->
            <id>signed</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${nexusStaging.pluginVersion}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
</project>
