server:
  type: simple
  applicationContextPath: /
  adminContextPath: /private
  connector:
    type: http
    port: 8080

env: ${STREAM_REGISTRY_ENVIRONMENT:-local}

streamValidatorConfig:
  className: ${STREAM_REGISTRY_VALIDATOR:-com.homeaway.streamingplatform.extensions.validation.EmptyStreamValidator}

schemaManagerConfig:
  className: ${STREAM_REGISTRY_SCHEMA_MANAGER:-com.homeaway.streamingplatform.extensions.schema.ConfluentSchemaManager}
  properties:
    schema.registry.url: ${STREAM_REGISTRY_SCHEMA_REGISTRY_URL:-http://localhost:8081}

kafkaProducerConfig:
  kafkaProducerProperties:
    bootstrap.servers: ${STREAM_REGISTRY_BOOTSTRAP_SERVERS:-localhost:9092}
    acks: all
    retries: ${STREAM_REGISTRY_PRODUCER_RETRIES:-4}
    batch.size: 1
    linger.ms: 1
    buffer.memory: 33554432
    schema.registry.url: ${STREAM_REGISTRY_SCHEMA_REGISTRY_URL:-http://localhost:8081}

kafkaStreamsConfig:
  kstreamsProperties:
    bootstrap.servers: ${STREAM_REGISTRY_BOOTSTRAP_SERVERS:-localhost:9092}
    application.id: stream-registry-streams
    key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
    value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
    schema.registry.url: ${STREAM_REGISTRY_SCHEMA_REGISTRY_URL:-http://localhost:8081}
    replication.factor: ${STREAM_REGISTRY_KSTREAMS_REPLICATION_FACTOR:-1}
    num.stream.threads: 2

topicsConfig:
  producerTopic: _streamregistry_streams${STREAM_REGISTRY_PRODUCER_TOPIC_SUFFIX:-_v0.1}
  stateStoreName: _streamregistry_streams_kv${STREAM_REGISTRY_PRODUCER_STATE_TOPIC_SUFFIX_STATE:-_v0.1}

infraManagerConfig:
  className: com.homeaway.streamingplatform.provider.impl.KafkaInfraManager
  config:
    infraManagerTopic: _streamregistry_infra${STREAM_REGISTRY_INFRA_TOPIC_SUFFIX:-_v0.1}
    infraManagerStateStoreName: _streamregistry_infra_kv${STREAM_REGISTRY_INFRA_STATE_TOPIC_SUFFIX:-_v0.1}
    infraKStreamsProperties:
      bootstrap.servers: ${STREAM_REGISTRY_BOOTSTRAP_SERVERS:-localhost:9092}
      application.id: stream-registry-infra
      key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
      value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
      schema.registry.url: ${STREAM_REGISTRY_SCHEMA_REGISTRY_URL:-http://localhost:8081}
      replication.factor: ${STREAM_REGISTRY_INFRA_REPLICATION_FACTOR:-1}

logging:
  level: INFO
  loggers:
    com.homeaway: DEBUG
  appenders:
  - type: console
    logFormat: "[%d{HH:mm:ss.SSS}] [%t] %-6level %logger{5} - %X{code} %msg %n"

swagger:
  resourcePackage: com.homeaway.streamingplatform.resource
  title: Stream Registry API
  version: v0
  description: Stream Registry API
  contact: stream-registry-committers@groups.homeawaycorp.com
  scan: true

httpClient:
  timeout: 10000ms
  connectionTimeout: 10000ms
  connectionRequestTimeout: 10000ms